DROP TABLE IF EXISTS CONCERT;
DROP TABLE IF EXISTS CONCERT_SCHEDULE;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS QUEUE;
DROP TABLE IF EXISTS SEAT;
DROP TABLE IF EXISTS RESERVATION;
DROP TABLE IF EXISTS POINT;
DROP TABLE IF EXISTS POINT_HISTORY;
DROP TABLE IF EXISTS USERS;

CREATE TABLE CONCERT (
    CONCERT_ID BIGINT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(100),
    PRIMARY KEY (CONCERT_ID)
);

CREATE TABLE CONCERT_SCHEDULE (
    CONCERT_SCHEDULE_ID BIGINT NOT NULL AUTO_INCREMENT,
    CONCERT_ID BIGINT,
    SCHEDULE_DT DATETIME(6),
    PRIMARY KEY (CONCERT_SCHEDULE_ID)
);

CREATE TABLE PAYMENT (
    PAYMENT_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT,
    RESERVATION_ID BIGINT,
    PRICE INTEGER,
    PAYMENT_METHOD CHAR(2),
    STATUS CHAR(1),
    REG_DT DATETIME(6),
    PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE QUEUE (
    QUEUE_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT,
    TOKEN CHAR(36),
    STATUS CHAR(1),
    REG_DT DATETIME(6),
    MOD_DT DATETIME(6),
    EXP_DT DATETIME(6),
    PRIMARY KEY (QUEUE_ID)
);

CREATE TABLE SEAT (
    SEAT_ID BIGINT NOT NULL AUTO_INCREMENT,
    CONCERT_SCHEDULE_ID BIGINT,
    SEAT_NUMBER SMALLINT,  -- 콘서트 당 최대 좌석 수 32,767
    PRICE INTEGER,
    STATUS CHAR(1),
    PRIMARY KEY (SEAT_ID)
);

CREATE TABLE RESERVATION (
    RESERVATION_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT,
    SEAT_ID BIGINT,
    SEAT_NUMBER SMALLINT,
    PRICE INTEGER,
    STATUS CHAR(1),
    REG_DT DATETIME(6),
    PRIMARY KEY (RESERVATION_ID)
);
  
CREATE TABLE POINT (
    POINT_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT,
    AMOUNT INTEGER,
    PRIMARY KEY (POINT_ID)
);

CREATE TABLE POINT_HISTORY (
    POINT_HISTORY_ID BIGINT NOT NULL AUTO_INCREMENT,
    USER_ID BIGINT,
    AMOUNT INTEGER,
    TRANSACTION_TYPE CHAR(1),
    REG_DT DATETIME(6),
    PRIMARY KEY (POINT_HISTORY_ID)
);

CREATE TABLE USERS (
    USER_ID BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (USER_ID)
);